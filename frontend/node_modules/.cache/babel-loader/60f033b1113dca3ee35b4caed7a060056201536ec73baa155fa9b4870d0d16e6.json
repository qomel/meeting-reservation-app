{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domel\\\\Documents\\\\GitHub\\\\meeting-reservation-app\\\\frontend\\\\src\\\\pages\\\\RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\n// Schemat walidacji\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email(\"Niepoprawny adres e-mail\").required(\"Email jest wymagany\"),\n  password: yup.string().min(6, \"Hasło musi mieć co najmniej 6 znaków\").required(\"Hasło jest wymagane\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Hasła muszą być identyczne\").required(\"Potwierdzenie hasła jest wymagane\")\n});\nexport default function RegisterPage() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n  const onSubmit = async data => {\n    setError(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password,\n          role: \"user\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Rejestracja nie powiodła się\");\n      const newUser = await res.json();\n      localStorage.setItem(\"user\", JSON.stringify(newUser));\n      navigate(\"/\");\n    } catch (err) {\n      setError(\"Nie udało się zarejestrować użytkownika\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white shadow rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Rejestracja\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"email\"),\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Has\\u0142o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register(\"password\"),\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Potwierd\\u017A has\\u0142o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register(\"confirmPassword\"),\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.confirmPassword.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 hover:bg-blue-700 text-white w-full py-2 rounded\",\n        children: \"Zarejestruj si\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"WRvrw8vNeyS2bNGf3WhaR83Q93I=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useForm","yupResolver","yup","useNavigate","useState","jsxDEV","_jsxDEV","schema","object","shape","email","string","required","password","min","confirmPassword","oneOf","ref","RegisterPage","_s","register","handleSubmit","formState","errors","resolver","navigate","error","setError","onSubmit","data","res","fetch","method","headers","body","JSON","stringify","role","ok","Error","newUser","json","localStorage","setItem","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","type","_c","$RefreshReg$"],"sources":["C:/Users/domel/Documents/GitHub/meeting-reservation-app/frontend/src/pages/RegisterPage.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\n// Schemat walidacji\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Niepoprawny adres e-mail\")\r\n    .required(\"Email jest wymagany\"),\r\n  password: yup\r\n    .string()\r\n    .min(6, \"Hasło musi mieć co najmniej 6 znaków\")\r\n    .required(\"Hasło jest wymagane\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\")], \"Hasła muszą być identyczne\")\r\n    .required(\"Potwierdzenie hasła jest wymagane\"),\r\n});\r\n\r\ntype FormData = {\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n};\r\n\r\nexport default function RegisterPage() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormData>({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    setError(\"\");\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/users\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: data.email,\r\n          password: data.password,\r\n          role: \"user\",\r\n        }),\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Rejestracja nie powiodła się\");\r\n\r\n      const newUser = await res.json();\r\n      localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      setError(\"Nie udało się zarejestrować użytkownika\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white shadow rounded\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Rejestracja</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            {...register(\"email\")}\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n          {errors.email && (\r\n            <p className=\"text-red-500 text-sm\">{errors.email.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Hasło</label>\r\n          <input\r\n            type=\"password\"\r\n            {...register(\"password\")}\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n          {errors.password && (\r\n            <p className=\"text-red-500 text-sm\">{errors.password.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Potwierdź hasło</label>\r\n          <input\r\n            type=\"password\"\r\n            {...register(\"confirmPassword\")}\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n          {errors.confirmPassword && (\r\n            <p className=\"text-red-500 text-sm\">\r\n              {errors.confirmPassword.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {error && <p className=\"text-red-600\">{error}</p>}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-600 hover:bg-blue-700 text-white w-full py-2 rounded\"\r\n        >\r\n          Zarejestruj się\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}