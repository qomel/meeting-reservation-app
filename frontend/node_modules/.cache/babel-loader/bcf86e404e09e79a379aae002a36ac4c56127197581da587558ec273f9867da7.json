{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domel\\\\Documents\\\\GitHub\\\\meeting-reservation-app\\\\frontend\\\\src\\\\pages\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(\"\"); // wyczyść poprzedni błąd\n\n    try {\n      const res = await fetch(`http://localhost:5000/users?email=${email}`);\n      if (!res.ok) {\n        setError(\"Błąd połączenia z serwerem.\");\n        return;\n      }\n      const users = await res.json();\n      const user = users.find(u => u.password === password);\n      if (user) {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        navigate(\"/meetings\");\n      } else {\n        setError(\"Nieprawidłowy email lub hasło.\");\n      }\n    } catch (err) {\n      console.error(\"Błąd logowania:\", err);\n      setError(\"Wystąpił błąd podczas logowania.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"bg-gray-100 p-6 rounded shadow-md w-80\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-center\",\n        children: \"Logowanie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        className: \"w-full p-2 mb-3 border rounded\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Has\\u0142o\",\n        className: \"w-full p-2 mb-4 border rounded\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\",\n        children: \"Zaloguj si\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"fKTyZRJ9G3KKfcM/xubEXQY9Y70=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","error","setError","handleLogin","e","preventDefault","res","fetch","ok","users","json","user","find","u","localStorage","setItem","JSON","stringify","err","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/domel/Documents/GitHub/meeting-reservation-app/frontend/src/pages/LoginPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // wyczyść poprzedni błąd\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/users?email=${email}`);\r\n      if (!res.ok) {\r\n        setError(\"Błąd połączenia z serwerem.\");\r\n        return;\r\n      }\r\n\r\n      const users = await res.json();\r\n      const user = users.find((u: any) => u.password === password);\r\n\r\n      if (user) {\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        navigate(\"/meetings\");\r\n      } else {\r\n        setError(\"Nieprawidłowy email lub hasło.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Błąd logowania:\", err);\r\n      setError(\"Wystąpił błąd podczas logowania.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-screen bg-white\">\r\n      <form\r\n        onSubmit={handleLogin}\r\n        className=\"bg-gray-100 p-6 rounded shadow-md w-80\"\r\n      >\r\n        <h2 className=\"text-2xl font-bold mb-4 text-center\">Logowanie</h2>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"w-full p-2 mb-3 border rounded\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Hasło\"\r\n          className=\"w-full p-2 mb-4 border rounded\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\"\r\n        >\r\n          Zaloguj się\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}